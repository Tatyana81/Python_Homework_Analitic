# # Измените код одной-двух решенных ранее задач (с прошлых семинаров или домашних работ), 
# # применив лямбды, filter, map, zip, enumerate, списочные выражения.


# # 1.Задайте список из нескольких чисел. Напишите программу, 
# # которая найдёт сумму элементов списка, стоящих на нечётной позиции.
# # *Пример:*
# # - [2, 3, 5, 9, 3] -> на нечётных позициях элементы 3 и 9, ответ: 12

# Первое решение
# list1=[2, 3, 5, 9, 3]
# sum_odd=0
# for i in range(1,len(list1),2):
#         sum_odd+=list1[i]
# print (sum_odd)

# Новое  решение
list1=[2, 3, 5, 9, 3]
sp = [v for k,v in enumerate(list1) if k%2]
print(sum(sp))



# # 1 Напишите программу, которая принимает на вход вещественное число и показывает сумму его цифр.
# # Пример:
# #  6782 -> 23
# #  0,56 -> 11

# ПЕрвое ерешение
# str = input("Введите вещественное число: ")
# str=str.replace('.', '')
# str=str.replace('-', '')
# n=0
# for i in str:
#     n+=int(i)
# print (n)

# spc = filter(lambda x: x.isdigit(), spa)

# Новое  решение
sp = list(input('Введите вещественное число  '))
spc = list(map(int, (filter(lambda x: x.isdigit(), sp))))
print(sum(spc))